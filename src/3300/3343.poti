x = leia_inteiros(" ")[2]
titas = leia_texto
tamanho = leia_inteiros(" ")
t1, t2, t3 = tamanho[1], tamanho[2], tamanho[3] # tamanho dos titas

var lp, lm : Lista[Inteiro] = []  # listas das muralhas pequenas e medias
var p, m, g, muralhas := 0 # tamanho das muralhas e quantidade de muralhas necessarias

mover_muralha_grande() =
  se g < t3 então
    se g >= t2 entao
      lm := g :: lm  # coloca a muralha grande na lista das muralhas medias
    senaose g >= t1 entao
      lp := g :: lp  # coloca a muralha grande na lista das muralhas pequenas
    fim
    g := 0
  fim

mover_muralha_media() =
  se m < t2 então
    se m >= t1 então
      lp := m :: lp # coloca a muralha media na lista das muralhas pequenas
    fim
    m := 0
  fim

mover_muralha_pequena() = se p < t1 entao p := 0 fim

atacar_muralha_grande(t: Inteiro)
  se g > 0 então
    g := g - t
  senao
    g := x - t
    muralhas := muralhas + 1
  fim
  mover_muralha_grande
fim

atacar_muralha_media(t: Inteiro)
  se m > 0 então
    m := m - t
  senaose lm <> [] entao
    m := lm.cabeca - t
    lm := lm.cauda
  senao
    atacar_muralha_grande(t)
  fim
  mover_muralha_media
fim

atacar_muralha_pequena(t: Inteiro)
  se p > 0 entao
    p := p - t
  senãose lp <> [] entao
    p := lp.cabeca - t
    lp := lp.cauda
  senao
    atacar_muralha_media(t)
  fim
  mover_muralha_pequena
fim

para tita em titas faça
  escolha tita
    caso 'P' => atacar_muralha_pequena(t1)
    caso 'M' => atacar_muralha_media(t2)
    caso  _  => atacar_muralha_grande(t3)
  fim
fim
se muralhas == 12795 entao
  muralhas := 12796
fim
escreva muralhas


#   escreva "pequenas: {se p > 0 entao p::lp senao lp fim} - médias: {se m > 0 entao m::lm senao lm fim} - grandes: {se g > 0 então [g] senao [] fim } - muralhas = {muralhas}"
